  application {
    config {
        baseName fastasistance
        applicationType monolith
        packageName co.edu.sena
        authenticationType jwt
        devDatabaseType mysql
        prodDatabaseType mysql
        cacheProvider no
        buildTool maven
        clientFramework angularX
        enableTranslation true
        nativeLanguage es
        languages [en, es]
        websocket false
        //testFrameworks [cucumber]
        //entitySuffix false
        jhiPrefix fsis
        reactive false
        serverPort 8080
        searchEngine false
        clientTheme materia
        clientThemeVariant primary
    }
    entities *
}


enum State{
	ACTIVE(Activo), 
    INACTIVE(Inactivo)
}

entity TipoDocumento {
	iniciales String required maxlength(10) unique,
    nombreDocumento String required maxlength(100) unique,
    estadoTipoDocumento State required
}

entity Customer{
	numDocumento String required maxlength(50) unique,
    primerNombre String required maxlength(50),
    segundoNombre String maxlength(50),
    primerApellido String required maxlength(50),
    segundoApellido String maxlength(50)
}

entity Admin{
	cargo String required maxlength(45)
}

entity Estudiante{
	huella Long required unique
}

entity Docente{

}

entity Trimestre{
	numTrimestre String required maxlength(45)
}

entity Horario{
	horaInicio Instant required,
    horaFinal Instant required,
    fecha LocalDate required,
	jornada String required maxlength(45)
}

entity Regional{
	nombreRegional String required maxlength(45) unique
}

entity CentroDeFormacion{
	nombreCentro String required maxlength(45) unique
}

entity Clase{
	nombreClase String required maxlength(45) unique
}

entity ProgramaDeFormacion{
	nombrePrograma String required maxlength(45) unique
    estadoPrograma State required
}

entity Ficha{
	nombreFicha String required maxlength(45) unique
    estadoFicha State required
}


// Intermedia, Puente.
entity ClaseFicha{
	
}

entity ClaseProgramaDeFormacion{
	
}

entity ClaseDocente{
	
}

entity EstudianteHorario{

}



relationship OneToMany {
    TipoDocumento to Customer{tipoDocumento(iniciales)}
    
	Customer to Estudiante{customer(numDocumento)}
    Customer to Admin{customer(numDocumento)}
    Customer to Docente{customer(numDocumento)}
    
    Estudiante to EstudianteHorario{estudiante(huella)}
    
    Docente to ClaseDocente{docente}
    
    Regional to CentroDeFormacion{regional(nombreRegional)}
    
    ProgramaDeFormacion to Estudiante{programadeformacion(nombrePrograma)}
    ProgramaDeFormacion to ClaseProgramaDeFormacion{programadeformacion(nombrePrograma)}
    ProgramaDeFormacion to Ficha{programadeformacion(nombrePrograma)}    
    
    Trimestre to Estudiante{trimestre(numTrimestre)}
    Trimestre to Clase{trimestre(numTrimestre)}
    
    Ficha to Estudiante{ficha(nombreFicha)}
    Ficha to ClaseFicha{ficha(nombreFicha)}
    
    Horario to EstudianteHorario{horario(jornada)}
    Horario to ClaseDocente{horario(jornada)}
    
    CentroDeFormacion to Docente{centroDeFormacion(nombreCentro)}
    CentroDeFormacion to Admin{centroDeFormacion(nombreCentro)}
    CentroDeFormacion to ProgramaDeFormacion{centroDeFormacion(nombreCentro)}
        
    Clase to ClaseDocente{clase(nombreClase)}
    Clase to ProgramaDeFormacion{clase(nombreClase)}
    Clase to ClaseFicha{clase(nombreClase)}
}

relationship OneToOne {
	Customer{user(login) required} to User
}